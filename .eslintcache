[{"C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\index.js":"1","C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\reportWebVitals.js":"2","C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\containers\\App.js":"3","C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\components\\Scroll.js":"4","C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\components\\ErrorBoundry.js":"5","C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\components\\SearchBox.js":"6","C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\components\\CardList.js":"7","C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\components\\Card.js":"8"},{"size":984,"mtime":1612099448757,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":3080,"mtime":1612099449337,"results":"12","hashOfConfig":"10"},{"size":322,"mtime":1612090231472,"results":"13","hashOfConfig":"10"},{"size":414,"mtime":1612099447854,"results":"14","hashOfConfig":"10"},{"size":303,"mtime":1612090229527,"results":"15","hashOfConfig":"10"},{"size":951,"mtime":1612099451925,"results":"16","hashOfConfig":"10"},{"size":326,"mtime":1612099451169,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1y3vszd",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\index.js",[],["38","39"],"C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\reportWebVitals.js",[],"C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\containers\\App.js",["40"],"import React, { Component } from 'react';\n// import { robots } from './robots1';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=> response.json())\n      .then(users=> {this.setState({robots: users})});\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n    {\n    // console.log(event.target.value)\n    // const filteredRobots = this.state.robots.filter(robots => {\n    //   return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    // })\n    // console.log(filteredRobots)\n    }\n  }\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n    console.log(filteredRobots)\n    return !robots.length ?\n       <h1>Loading</h1> : \n       (\n          <div className='tc'>\n            <h1 className='f2'>RoboFriends</h1>\n            <SearchBox searchChange = {this.onSearchChange}/>\n            <Scroll>\n              <ErrorBoundry>\n                <CardList robots = {filteredRobots}/>\n              </ErrorBoundry>\n            </Scroll>\n          </div>\n        );\n    }\n\n\n}\n\n// const App = () => {\n//   return (\n//       <div className='tc'>\n//         <h1>RoboFriends</h1>\n//         <SearchBox />\n//         <CardList robots = {robots}/>\n//       </div>\n//     )\n// }\n\nexport default App;\n\n// import logo from './logo.svg';\n// import './App.css';\n     \n// class App extends React.Component {\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//           <p>\n//              Edit <code>src/App.js</code> and save to reload.\n//           </p>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://reactjs.org\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//           >\n//             Learn React\n//           </a>\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n     \n// export default App;\n\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\components\\Scroll.js",["41"],"import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;\r\n\r\n{\t\r\n// const Scroll = (props) => {\r\n// \tconsole.log(props)\r\n// \treturn props.children\r\n// };\r\n}\r\n\r\n\r\n","C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\components\\ErrorBoundry.js",[],"C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\components\\SearchBox.js",[],"C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\components\\CardList.js",["42"],"import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots}) => {\r\n\tif (false) {\r\n\t\tthrow new Error('NOOOOOOO!');\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\t\t\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n{\r\n// const CardList = ({robots}) => {\r\n// \tconst cardsArray = robots.map((user, i) => {\r\n// \t\treturn <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n// \t})\r\n// \treturn (\r\n// \t\t<div>\r\n// \t\t\t{cardsArray}\r\n// \t\t\t{\r\n// \t\t\t// <Card id={robots[1].id} name={robots[1].name} email={robots[1].email}/>\r\n// \t\t\t// <Card id={robots[0].id} name={robots[0].name} email={robots[0].email}/>\r\n// \t\t\t// <Card id={robots[2].id} name={robots[2].name} email={robots[2].email}/>\r\n// \t\t\t}\r\n// \t\t</div>\r\n// \t\t);\r\n// }\r\n}\r\n\r\nexport default CardList;","C:\\Users\\Home\\Desktop\\Web\\react\\robo\\src\\components\\Card.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":27,"column":5,"nodeType":"49","messageId":"50","endLine":33,"endColumn":6},{"ruleId":"47","severity":1,"message":"51","line":13,"column":1,"nodeType":"49","messageId":"52","endLine":18,"endColumn":2},{"ruleId":"47","severity":1,"message":"51","line":26,"column":1,"nodeType":"49","messageId":"52","endLine":42,"endColumn":2},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Block is redundant.","redundantBlock","no-global-assign","no-unsafe-negation"]